# Commands for running various parts of the tutorial.

# Test everything in a subprocess.
# If this exits with $?==0, everything with the @test label works.
mdrip --mode test --label test --blockTimeOut 15m ~/snt

# A more verbose, edittable form of the above.
cd ~/snt; mdrip \
    --mode test \
    --label test \
    --blockTimeOut 15m \
    --alsologtostderr \
    --v 2 \
    --stderrthreshold INFO \
    ./README.md \
    ./startCluster/minikube.md \
    ./startCluster/confirm.md \
    ./buildAServer.md \
    ./containerize.md \
    ./k8sReview/namespaces.md \
    ./k8sReview/pods.md \
    ./k8sReview/services.md \
    ./k8sReview/replication.md \
    ./k8sReview/deployment.md \
    ./k8sReview/configMap.md


# Runs in current shell, leaving the modified environment to play with.
cd ~/snt; eval "$(mdrip --label test \
  ./README.md \
  ./startCluster/minikube.md \
  ./startCluster/confirm.md \
  ./buildAServer.md \
  ./containerize.md \
  ./k8sReview/namespaces.md \
  ./k8sReview/pods.md \
)"

# Re-establish environment.
# Assumes that all downloads are done and that the cluster is up.
eval "$(mdrip --label env ~/snt)"

# Export all the functions in the current shell.
# Do this to allow partial tests in subprocesses to work.
while IFS= read -r line; do export -f $line; done < <(
    declare -F | grep tut_ | awk '{ print $3 }')

# E.g., after the above, try running just
# the service tutorial in test mode.
mdrip \
    --mode test \
    --label test \
    --blockTimeOut 2m \
    --alsologtostderr \
    --v 2 \
    --stderrthreshold INFO \
    ./k8sReview/services.md


# Global string replace
cd ~/snt
find ./ -name "*.md" | sed -i 's/tut_BuildProgram/tut_buildProgram/'
